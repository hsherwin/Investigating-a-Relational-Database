QUESTION 1 - Same as Question Set 1: Question 1
We want to understand more about the movies that families are watching. 
The following categories are considered family movies: Animation, 
Children, Classics, Comedy, Family and Music.

Create a query that lists each movie, the film category it is classified in,
and the number of times it has been rented out.


SELECT   c.name AS category,
	COUNT(*) AS times_rented

FROM film f
	JOIN inventory i
	ON f.film_id = i.film_id
	JOIN rental r
	ON i.inventory_id = r.inventory_id
	JOIN film_category fc
	ON  fc.film_id = f.film_id
	JOIN category c
	ON c.category_id = fc.category_id

WHERE c.name = 'Animation' OR c.name = 'Children' OR c.name = 'Classics'
OR c.name = 'Comedy' OR c.name = 'Family' OR c.name = 'Music'

	GROUP BY 1
    ORDER BY 2 DESC




QUESTION 2 - Same as Question Set 1: Question 2
Now we need to know how the length of rental duration of these 
family-friendly movies compares to the duration that all movies are rented 
for. Can you provide a table with the movie titles and divide them into 
4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) 
based on the quartiles (25%, 50%, 75%) of the rental duration for movies 
across all categories? Make sure to also indicate the category that these 
family-friendly movies fall into.

/* First table finds all Family Movies and how many times they've been rented */
WITH T1 as (SELECT  f.title AS title,
	c.name AS category,
	COUNT(*) AS times_rented

FROM film f
	JOIN inventory i
	ON f.film_id = i.film_id
	JOIN rental r
	ON i.inventory_id = r.inventory_id
	JOIN film_category fc
	ON  fc.film_id = f.film_id
	JOIN category c
	ON c.category_id = fc.category_id

WHERE c.name = 'Animation' OR c.name = 'Children' OR c.name = 'Classics'
OR c.name = 'Comedy' OR c.name = 'Family' OR c.name = 'Music'

	GROUP BY 1, 2
        ORDER BY 2, 1),


/* Second table places all movies within a quartile based off of rental duration */
T2 AS   (SELECT title, 
	rental_duration,
        NTILE(4) OVER(ORDER BY rental_duration) AS Quartile  
FROM film)


/* Join t1 and t2 only for the movies with the family category to see what quartile they are in */
SELECT  T1.title, 
	T1.category, 
	T2.rental_duration,
	T2.quartile
FROM T1
JOIN T2
ON T1.title = T2.title
ORDER BY 4;


QUESTION 3 - Same as Question Set 2: Question 1

We want to find out how the two stores compare in their count of rental 
orders during every month for all the years we have data for. 
Write a query that returns the store ID for the store, the year and 
month and the number of rental orders each store has fulfilled for that 
month. Your table should include a column for each of the following: 
year, month, store ID and count of rental orders fulfilled during that month.


SELECT  s.store_id, 
	DATE_PART ('year', r.rental_date) AS rental_year,
	DATE_PART ('month', r.rental_date) AS rental_month,
	COUNT(*) AS count_of_rentals

FROM 	Store s
JOIN 	staff st
ON 	s.store_id = st.store_id
JOIN 	rental r
ON 	r.staff_id = st.staff_id

GROUP BY 1, 2, 3
ORDER BY 2, 3;



QUESTION 4 (CORRECT) - adaption of Question Set 2: Question 2
We would like to know who were our top 10 paying customers, how many 
payments they made in the month of Marchs during 2007, and what was the amount 
of the monthly payments. Can you write a query to capture the customer name,
month and year of payment, and total payment amount for each month by these 
top 10 paying customers?

/* First table finds top 10 customers */
WITH t1 AS
(SELECT c.first_name||' '|| c.last_name AS customer_name,
	c.customer_id AS customer_id,
	SUM(p.amount) AS total_payment,
	COUNT(*) AS paycount
 
FROM 	customer c
JOIN 	payment p
ON 	p.customer_id = c.customer_id

GROUP BY 1, 2
ORDER BY total_payment DESC
LIMIT 10),

/* Second table finds monthly transaction history of all customers */
t2 AS 
(SELECT  c.first_name||' '|| c.last_name AS customer_name,
	c.customer_id AS customer_id,
	DATE_TRUNC('MONTH', p.payment_date) AS month,
	SUM(p.amount) AS total_payment,
	COUNT(*) AS paycount
    
FROM 	customer c
JOIN 	payment p
ON 	p.customer_id = c.customer_id

GROUP BY 1, 2, 3
ORDER BY 1, 3)

/* Join the tables t1 and t2 to limit for Top 10 customers */
SELECT  
	t2.month,
	t1.customer_name,
	t2.total_payment,
	t2.paycount
        
FROM 	t1
JOIN	t2
ON	t1.customer_id = t2.customer_id
AND 	t1.customer_name = t2.customer_name

/* final adaption for only March 2007 figures */
 WHERE t2.month = '2007-03-01';
